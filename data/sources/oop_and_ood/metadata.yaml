tags:
  - OOP_and_OOD:
    - Principles:
      - Encapsulation
      - Inheritance
      - Polymorphism
      - Abstraction
      - SOLID:
        - Single_Responsibility_Principle
        - Open_Closed_Principle
        - Liskov_Substitution_Principle
        - Interface_Segregation_Principle
        - Dependency_Inversion_Principle
      - DRY
      - KISS
      - YAGNI
      - Composition_over_Inheritance
    - Design_Patterns:
      - Creational:
        - Singleton
        - Factory
        - Abstract_Factory
        - Builder
        - Prototype
      - Structural:
        - Adapter
        - Bridge
        - Composite
        - Decorator
        - Facade
        - Flyweight
        - Proxy
      - Behavioral:
        - Chain_of_Responsibility
        - Command
        - Interpreter
        - Iterator
        - Mediator
        - Memento
        - Observer
        - State
        - Strategy
        - Template_Method
        - Visitor
    - UML:
      - Class_Diagrams
      - Sequence_Diagrams
      - Use_Case_Diagrams
      - Activity_Diagrams
      - State_Diagrams
      - Component_Diagrams
      - Deployment_Diagrams
      - Object_Diagrams
      - Interaction_Diagrams
    - Methodologies:
      - Agile
      - Scrum
      - Extreme_Programming
      - Test_Driven_Development
      - Behavior_Driven_Development
      - Domain_Driven_Design
      - Feature_Driven_Development
    - Modeling:
      - Use_Case_Modeling
      - Class_Modeling
      - Sequence_Modeling
      - State_Modeling
      - Component_Modeling
      - Deployment_Modeling
    - Advanced_Topics:
      - Metaprogramming
      - Reflection
      - Aspect_Oriented_Programming
      - Design_By_Contract
      - Immutable_Objects
      - Design_Templates
      - Dependency_Injection
      - Mocking_and_Stubbing
      - Test_Driven_Development
      - Behavior_Driven_Development
    - Best_Practices:
      - Code_Readability
      - Code_Refactoring
      - Code_Documentation
      - Naming_Conventions
      - Design_For_Extension
      - Minimize_Coupling
      - Maximize_Cohesion
      - Avoid_Premature_Optimization
      - Use_Patterns_Smartly
    - Languages:
      - Java
      - Python
      - JavaScript